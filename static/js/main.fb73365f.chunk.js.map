{"version":3,"sources":["fbase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Switt.js","components/SwittFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Profile","userObj","refreshUser","history","useHistory","useState","displayName","newDisplayName","setNewDisplayName","onSubmit","event","a","preventDefault","updateProfile","className","onChange","value","target","type","autoFocus","placeholder","style","marginTop","onClick","signOut","push","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","required","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","marginBottom","faGoogle","faGithub","Switt","swittObj","isOwner","editing","setEditing","text","newSwitt","setNewSwitt","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","onToggleEditing","update","src","class","faTrash","faPencilAlt","SwittFactory","switt","setSwitt","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","createrId","collection","add","maxLength","for","faPlus","accept","theFile","files","imgReader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","switts","setSwitts","useEffect","orderBy","onSnapshot","snapshot","swittArray","docs","map","Navigation","display","justifyContent","to","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb73365f.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\n\r\n// firbase의 Cloud Firestore\r\nexport const dbService = firebase.firestore();\r\n\r\n// firbase의 Storage, bucket\r\nexport const storageService = firebase.storage();\r\n","import { authService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push('/');\r\n    // history를 사용하거나, Router.js에서 Redirect를 사용가능.\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          autoFocus\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { authService } from 'fbase';\r\nimport React, { useState } from 'react';\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === 'email') {\r\n      setEmail(value);\r\n    } else if (name === 'password') {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? 'Create Account' : 'Sign In'}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? 'Sign In' : 'Create Account'}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\nexport default AuthForm;\r\n","import AuthForm from 'components/AuthForm';\r\nimport { authService, firebaseInstance } from 'fbase';\r\nimport React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === 'google') {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === 'github') {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <div className=\"headerName\">Welcome to Switter!</div>\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={'#04AAFF'}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import { dbService, storageService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Switt = ({ swittObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newSwitt, setNewSwitt] = useState(swittObj.text);\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm('Are you sure you want to delete this switt?');\r\n    // console.log(ok);\r\n    if (ok) {\r\n      await dbService.doc(`switts/${swittObj.id}`).delete();\r\n      await storageService.refFromURL(swittObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n  const onToggleEditing = () => {\r\n    setEditing((prev) => !prev);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`switts/${swittObj.id}`).update({\r\n      text: newSwitt,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewSwitt(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Edit your switt\"\r\n              value={newSwitt}\r\n              required\r\n              autoFocus\r\n              onChange={onChange}\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"Update\" className=\"formBtn\" />\r\n          </form>\r\n          <span onClick={onToggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{swittObj.text}</h4>\r\n          {swittObj.attachmentUrl && <img src={swittObj.attachmentUrl} />}\r\n          {isOwner && (\r\n            <div class=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={onToggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Switt;\r\n","import { dbService, storageService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst SwittFactory = ({ userObj }) => {\r\n  const [switt, setSwitt] = useState('');\r\n  const [attachment, setAttachment] = useState('');\r\n\r\n  const onSubmit = async (event) => {\r\n    if (switt === '') {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    let attachmentUrl = '';\r\n    if (attachment !== '') {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      // uuid는 랜덤 id를 생성해준다. npm install uuid & import 필요\r\n      const response = await attachmentRef.putString(attachment, 'data_url');\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n      // console.log(response);\r\n    }\r\n    const swittObj = {\r\n      text: switt,\r\n      createdAt: Date.now(),\r\n      createrId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection('switts').add(swittObj);\r\n    setSwitt('');\r\n    setAttachment('');\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setSwitt(value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const imgReader = new FileReader();\r\n    imgReader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    imgReader.readAsDataURL(theFile);\r\n  };\r\n\r\n  const onClearAttachment = () => setAttachment('');\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={switt}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SwittFactory;\r\n","import { dbService, storageService } from 'fbase';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Switt from '../components/Switt';\r\nimport SwittFactory from 'components/SwittFactory';\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [switts, setSwitts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dbService\r\n      .collection('switts')\r\n      .orderBy('createdAt', 'desc')\r\n      .onSnapshot((snapshot) => {\r\n        const swittArray = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setSwitts(swittArray);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <SwittFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {switts.map((switt) => (\r\n          <Switt\r\n            key={switt.id}\r\n            swittObj={switt}\r\n            isOwner={switt.createrId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul style={{ display: 'flex', justifyContent: 'center', marginTop: 50 }}>\r\n      <li>\r\n        <Link\r\n          to=\"/\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faTwitter} color={'#04AAFF'} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}> Home </span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={'#04AAFF'} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}'s Profile`\r\n              : 'Profile'}\r\n          </span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Profile from '../routes/Profile';\r\nimport Auth from '../routes/Auth';\r\nimport Home from '../routes/Home';\r\nimport Navigation from './Navigation';\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: '100%',\r\n              margin: '0 auto',\r\n              marginTop: 80,\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/Profile\">\r\n              <Profile refreshUser={refreshUser} userObj={userObj} />\r\n            </Route>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n            {/* <Redirect from=\"*\" to=\"/\" /> */}\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from 'react';\nimport AppRouter from './Router';\nimport { authService } from 'fbase';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        'Initializing...'\n      )}\n\n      {/* <footer>&copy; {new Date().getFullYear()} Switter </footer> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}